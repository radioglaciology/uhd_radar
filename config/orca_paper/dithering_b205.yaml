# This is a configuration file meant for the Ettus USRP B205mini-i

# ----------------------- Chirp generation ------------------------ #
GENERATE:
    sample_rate: &s_rate 56e6        # Of the generated chirp, tx and rx sample rates [sps]
    chirp_type: 'linear'             # Can be 'linear'
    chirp_bandwidth: 20e6            # [Hz]
    lo_offset_sw: 12.5e6               #  [Hz] lo offset to be applied digitally in chirp generation 
    window: 'rectangular'            # Window function applied to the chirp
    chirp_length: &chirp_len 10e-6    # [s] chirp length without zero padding
    pulse_length: &pulse_len 10e-6    # [s] total pulse length (chirp + symmetric zero padding)    
    out_file: &ch_sent "data/chirp.bin"   # The name of the output binary file
    show_plot: False                 # Display a time-domain plot of the generated chirp

# ----------------- TX/RX for USRP_B205mini-i --------------------- #
DEVICE:
    device_args: "num_recv_frames=700,num_send_frames=700,recv_frame_size=11000,send_frame_size=11000"   # device address
    subdev: "A:A"
    clk_ref: "internal"
    clk_rate: 56e6       # Clock Rate [Hz]
    tx_channels: "0"
    rx_channels: "0"
    cpu_format: "fc32" # CPU-side format    - see https://files.ettus.com/manual/structuhd_1_1stream__args__t.html#a602a64b4937a85dba84e7f724387e252
                       # Note: the rest of the processing pipeline supports only the following cpu_format options: fc32, sc16, sc8
    otw_format: "sc12" # On the wire format - see https://files.ettus.com/manual/structuhd_1_1stream__args__t.html#a0ba0e946d2f83f7ac085f4f4e2ce9578
GPIO:
    gpio_bank: "FP0"     # which GPIO bank to use (FP0 is front panel and default)
    pwr_amp_pin: "-1"     # which GPIO pin (on the DB15 connector) to use for external power amplifier control (set to -1 if not using)
    ref_out: -1          # whether to turn the 10 MHz reference out signal on (1) or off (0) set to (-1) if SDR does not support
RF0:
    rx_rate: *s_rate     # RX Sample Rate [sps]
    tx_rate: *s_rate     # TX Sample Rate [sps]
    freq: 330e6          # Center Frequency (for mixing)
    lo_offset: 0e6      # LO offset [Hz]
    rx_gain: 40          # RX Gain [dB]
    tx_gain: 33.5        # TX Gain [dB] - 60.8 is -10 dBm output
    bw: 56e6             # TX/RW Bandwidth [Hz]
    tx_ant: "TX/RX"
    rx_ant: "RX2"
    transmit: true       # "true" (or not set) for normal operation, set to "false" to completely disable transmit
    tuning_args: "" # set int_n or fractional tuning args, leave as "" to do nothing
RF1:                     # parameters for second RF channel
    rx_rate: *s_rate     # RX Sample Rate [sps]
    tx_rate: *s_rate     # TX Sample Rate [sps]
    freq: 500e6          # Center Frequency (for mixing)
    lo_offset: 0        # LO offset [Hz]
    rx_gain: 10         # RX Gain [dB]
    tx_gain: 10         # TX Gain [dB]
    bw: 0                # TX/RW Bandwidth [Hz]
    tx_ant: "TX/RX"
    rx_ant: "RX2"
CHIRP:
    time_offset: 1       # Time before first receive [s]
    tx_duration: *pulse_len # Transmission duration [s]
    rx_duration: 25e-6   # Receive duration [s]
    tr_on_lead: 0e-6     # Time from GPIO output toggle on to TX [s]
    tr_off_trail: 0e-6  # Time from TX off to GPIO output off [s]
    pulse_rep_int: 250e-6 # Chirp period [s]
    tx_lead: 0e-6        # Time between start of TX and RX[s]
    num_pulses: &num_pulses 1000000        # No. of chirps to TX/RX - set to -1 to continuously transmit pulses until stopped
    num_presums: 1
    phase_dithering: true
FILES:
    chirp_loc: *ch_sent                 # Chirp to transmit
    save_loc: &save_loc "data/rx_samps.bin" #"/dev/shm/rx_samps.bin" #"/media/usb/usrp_test/rx_samps.bin" #"data/rx_samps.bin"  # Save rx data here
    gps_loc: &gps_save_loc "data/gps_log.txt" # save gps data here (only works if gpsdo is selected as the clock source)
    max_chirps_per_file: -1 # Maximum number of RX from a chirp to write to a single file -- set to -1 to avoid breaking into multiple files
RUN_MANAGER: # These settings are only used by run.py -- not read by main.cpp at all
    # Note: if max_chirps_per_file = -1 (i.e. all data will be written directly to a single file, then final_save_loc and save_partial_files will be ignored
    final_save_loc: null #"data/rx_samps_merged.bin" # specify the save location for the big final file, set to null if you don't want to save a big file
    save_partial_files: False # set to true if you want individual small files to be copied, set to false if you just want the big merged file to be copied
    save_gps: False # set to true if using gps and wanting to save gps location data, set to false otherwise`



